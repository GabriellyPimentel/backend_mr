generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                     String             @id @default(uuid())
  nome                   String
  documentoIdentificacao String             @unique @map("documento_identificacao")
  telefone               String?
  email                  String?            @unique
  senha                  String
  Doador                 Doador?
  MaeSolo                MaeSolo?
  ProfissionalApoio      ProfissionalApoio?

  @@map("usuario")
}

model MaeSolo {
  id               String           @id
  data_nascimento  DateTime
  escolaridade     Escolaridade
  endereco         String
  rendaMensal      Int              @map("renda_mensal")
  situacaoTrabalho Boolean          @map("situacao_trabalho")
  Encaminhamento   Encaminhamento[]
  Filho            Filho[]
  usuario          Usuario          @relation(fields: [id], references: [id])

  @@map("mae_solo")
}

model Filho {
  id              String   @id @default(uuid())
  nome            String
  data_nascimento DateTime
  idMae           String   @map("id_mae")
  mae             MaeSolo  @relation(fields: [idMae], references: [id])

  @@map("filho")
}

model Doador {
  id          String  @id
  tipo_doador String
  usuario     Usuario @relation(fields: [id], references: [id])

  @@map("doador")
}

model ProfissionalApoio {
  id              String            @id
  areaAtuacao     String            @map("area_atuacao")
  Disponibilidade Disponibilidade[]
  Encaminhamento  Encaminhamento[]
  usuario         Usuario           @relation(fields: [id], references: [id])

  @@map("profissional_apoio")
}

model Disponibilidade {
  id             String            @id @default(uuid())
  idProfissional String            @map("id_profissional")
  data           String
  horario        String
  profissional   ProfissionalApoio @relation(fields: [idProfissional], references: [id])

  @@map("disponibilidade")
}

model Encaminhamento {
  id             String               @id @default(uuid())
  idMae          String               @map("id_mae")
  idProfissional String               @map("id_profissional")
  data           DateTime
  status         StatusEncaminhamento
  tipo_servico   String
  Atendimento    Atendimento[]
  maeSolo        MaeSolo              @relation(fields: [idMae], references: [id])
  profissional   ProfissionalApoio    @relation(fields: [idProfissional], references: [id])

  @@map("encaminhamento")
}

model Atendimento {
  id               String         @id @default(uuid())
  idEncaminhamento String         @map("id_encaminhamento")
  observacoes      String
  data             DateTime
  encaminhamento   Encaminhamento @relation(fields: [idEncaminhamento], references: [id])

  @@map("atendimento")
}

model playing_with_neon {
  id    Int    @id @default(autoincrement())
  name  String
  value Float? @db.Real
}

enum Escolaridade {
  medioIncompleto
  medioCompleto
  superiorIncompleto
  superiorCompleto
}

enum StatusEncaminhamento {
  emAndamento
  finalizado
  marcado
}
